syntax = "v1"


type (
    SysDictTypeAddRequest {
		Name  string  `json:"name,optional"`  // 字典名称
		DictType  string  `json:"dict_type,optional"`  // 字典类型
		State  int64  `json:"state,optional"`  // 状态
		Remark  string  `json:"remark,optional"`  // 描述
		Sort  int64  `json:"sort,optional"`  // 排序
    }

    SysDictTypeDelRequest {
		Id  int64  `path:"id"`  // 字典类型ID
    }

    SysDictTypeUpRequest {
		Id  int64  `json:"id"`  // 字典类型ID
		Name  string  `json:"name,optional"`  // 字典名称
		DictType  string  `json:"dict_type,optional"`  // 字典类型
		State  int64  `json:"state,optional"`  // 状态
		Remark  string  `json:"remark,optional"`  // 描述
		Sort  int64  `json:"sort,optional"`  // 排序      
    }


    SysDictTypeListRequest {
		Current  int64  `form:"current,default=1,optional"`  // 页码
		PageSize  int64  `form:"page_size,default=10,optional"`  // 页数
		Name  string  `form:"name,optional"`  // 字典名称
		DictType  string  `form:"dict_type,optional"`  // 字典类型
		State  int64  `form:"state,default=99,optional"`  // 状态
		Remark  string  `form:"remark,optional"`  // 描述       
    }


)

@server(
    //声明当前service下所有路由需要jwt鉴权，且会自动生成包含jwt逻辑的代码
    jwt: Auth
    middleware: CheckAuth // 路由中间件声明鉴权
    group: sysDictType
)

service Tpmt {

    // 添加
    @handler SysDictTypeAdd
    post /tpmt/sysDictType (SysDictTypeAddRequest) returns (Response)

    // 删除
    @handler SysDictTypeDel
    delete /tpmt/sysDictType/:id (SysDictTypeDelRequest) returns (Response)

    // 更新
    @handler SysDictTypeUp
    put /tpmt/sysDictType (SysDictTypeUpRequest) returns (Response)

    // 分页查询
    @handler SysDictTypeList
    get /tpmt/sysDictType (SysDictTypeListRequest) returns (Response)

}