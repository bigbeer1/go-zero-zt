// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: tpmt.proto

package server

import (
	"context"

	"tpmt-zt/service/tpmt/rpc/internal/logic"
	"tpmt-zt/service/tpmt/rpc/internal/svc"
	"tpmt-zt/service/tpmt/rpc/tpmtclient"
)

type TpmtServer struct {
	svcCtx *svc.ServiceContext
	tpmtclient.UnimplementedTpmtServer
}

func NewTpmtServer(svcCtx *svc.ServiceContext) *TpmtServer {
	return &TpmtServer{
		svcCtx: svcCtx,
	}
}

// 资产
func (s *TpmtServer) TpmtAssetAdd(ctx context.Context, in *tpmtclient.TpmtAssetAddReq) (*tpmtclient.CommonResp, error) {
	l := logic.NewTpmtAssetAddLogic(ctx, s.svcCtx)
	return l.TpmtAssetAdd(in)
}

func (s *TpmtServer) TpmtAssetDelete(ctx context.Context, in *tpmtclient.TpmtAssetDeleteReq) (*tpmtclient.CommonResp, error) {
	l := logic.NewTpmtAssetDeleteLogic(ctx, s.svcCtx)
	return l.TpmtAssetDelete(in)
}

func (s *TpmtServer) TpmtAssetUpdate(ctx context.Context, in *tpmtclient.TpmtAssetUpdateReq) (*tpmtclient.CommonResp, error) {
	l := logic.NewTpmtAssetUpdateLogic(ctx, s.svcCtx)
	return l.TpmtAssetUpdate(in)
}

func (s *TpmtServer) TpmtAssetFindOne(ctx context.Context, in *tpmtclient.TpmtAssetFindOneReq) (*tpmtclient.TpmtAssetFindOneResp, error) {
	l := logic.NewTpmtAssetFindOneLogic(ctx, s.svcCtx)
	return l.TpmtAssetFindOne(in)
}

func (s *TpmtServer) TpmtAssetList(ctx context.Context, in *tpmtclient.TpmtAssetListReq) (*tpmtclient.TpmtAssetListResp, error) {
	l := logic.NewTpmtAssetListLogic(ctx, s.svcCtx)
	return l.TpmtAssetList(in)
}

// 网关
func (s *TpmtServer) TpmtGatewayAdd(ctx context.Context, in *tpmtclient.TpmtGatewayAddReq) (*tpmtclient.CommonResp, error) {
	l := logic.NewTpmtGatewayAddLogic(ctx, s.svcCtx)
	return l.TpmtGatewayAdd(in)
}

func (s *TpmtServer) TpmtGatewayDelete(ctx context.Context, in *tpmtclient.TpmtGatewayDeleteReq) (*tpmtclient.CommonResp, error) {
	l := logic.NewTpmtGatewayDeleteLogic(ctx, s.svcCtx)
	return l.TpmtGatewayDelete(in)
}

func (s *TpmtServer) TpmtGatewayUpdate(ctx context.Context, in *tpmtclient.TpmtGatewayUpdateReq) (*tpmtclient.CommonResp, error) {
	l := logic.NewTpmtGatewayUpdateLogic(ctx, s.svcCtx)
	return l.TpmtGatewayUpdate(in)
}

func (s *TpmtServer) TpmtGatewayFindOne(ctx context.Context, in *tpmtclient.TpmtGatewayFindOneReq) (*tpmtclient.TpmtGatewayFindOneResp, error) {
	l := logic.NewTpmtGatewayFindOneLogic(ctx, s.svcCtx)
	return l.TpmtGatewayFindOne(in)
}

func (s *TpmtServer) TpmtGatewayList(ctx context.Context, in *tpmtclient.TpmtGatewayListReq) (*tpmtclient.TpmtGatewayListResp, error) {
	l := logic.NewTpmtGatewayListLogic(ctx, s.svcCtx)
	return l.TpmtGatewayList(in)
}

// 监控点
func (s *TpmtServer) TpmtMonitorPointAdd(ctx context.Context, in *tpmtclient.TpmtMonitorPointAddReq) (*tpmtclient.CommonResp, error) {
	l := logic.NewTpmtMonitorPointAddLogic(ctx, s.svcCtx)
	return l.TpmtMonitorPointAdd(in)
}

func (s *TpmtServer) TpmtMonitorPointDelete(ctx context.Context, in *tpmtclient.TpmtMonitorPointDeleteReq) (*tpmtclient.CommonResp, error) {
	l := logic.NewTpmtMonitorPointDeleteLogic(ctx, s.svcCtx)
	return l.TpmtMonitorPointDelete(in)
}

func (s *TpmtServer) TpmtMonitorPointUpdate(ctx context.Context, in *tpmtclient.TpmtMonitorPointUpdateReq) (*tpmtclient.CommonResp, error) {
	l := logic.NewTpmtMonitorPointUpdateLogic(ctx, s.svcCtx)
	return l.TpmtMonitorPointUpdate(in)
}

func (s *TpmtServer) TpmtMonitorPointFindOne(ctx context.Context, in *tpmtclient.TpmtMonitorPointFindOneReq) (*tpmtclient.TpmtMonitorPointFindOneResp, error) {
	l := logic.NewTpmtMonitorPointFindOneLogic(ctx, s.svcCtx)
	return l.TpmtMonitorPointFindOne(in)
}

func (s *TpmtServer) TpmtMonitorPointList(ctx context.Context, in *tpmtclient.TpmtMonitorPointListReq) (*tpmtclient.TpmtMonitorPointListResp, error) {
	l := logic.NewTpmtMonitorPointListLogic(ctx, s.svcCtx)
	return l.TpmtMonitorPointList(in)
}

// 分页获取监测点实时数据
func (s *TpmtServer) TpmtMonitorPointRealTimeList(ctx context.Context, in *tpmtclient.TpmtMonitorPointRealTimeListReq) (*tpmtclient.TpmtMonitorPointRealTimeListResp, error) {
	l := logic.NewTpmtMonitorPointRealTimeListLogic(ctx, s.svcCtx)
	return l.TpmtMonitorPointRealTimeList(in)
}

// 获取单个监测点数据
func (s *TpmtServer) TpmtMonitorPointRealTimeFindOne(ctx context.Context, in *tpmtclient.TpmtMonitorPointRealTimeFindOneReq) (*tpmtclient.TpmtMonitorPointRealTimeFindOneResp, error) {
	l := logic.NewTpmtMonitorPointRealTimeFindOneLogic(ctx, s.svcCtx)
	return l.TpmtMonitorPointRealTimeFindOne(in)
}

// 获取监测点历史数据接口
func (s *TpmtServer) TpmtMonitorPointHistorical(ctx context.Context, in *tpmtclient.TpmtMonitorPointHistoricalReq) (*tpmtclient.TpmtMonitorPointHistoricalResp, error) {
	l := logic.NewTpmtMonitorPointHistoricalLogic(ctx, s.svcCtx)
	return l.TpmtMonitorPointHistorical(in)
}
