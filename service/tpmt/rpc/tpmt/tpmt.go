// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: tpmt.proto

package tpmt

import (
	"context"

	"tpmt-zt/service/tpmt/rpc/tpmtclient"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CommonResp         = tpmtclient.CommonResp
	SysUserAddReq      = tpmtclient.SysUserAddReq
	SysUserDeleteReq   = tpmtclient.SysUserDeleteReq
	SysUserFindOneReq  = tpmtclient.SysUserFindOneReq
	SysUserFindOneResp = tpmtclient.SysUserFindOneResp
	SysUserListData    = tpmtclient.SysUserListData
	SysUserListReq     = tpmtclient.SysUserListReq
	SysUserListResp    = tpmtclient.SysUserListResp
	SysUserUpdateReq   = tpmtclient.SysUserUpdateReq

	Tpmt interface {
		SysUserAdd(ctx context.Context, in *SysUserAddReq, opts ...grpc.CallOption) (*CommonResp, error)
		SysUserDelete(ctx context.Context, in *SysUserDeleteReq, opts ...grpc.CallOption) (*CommonResp, error)
		SysUserUpdate(ctx context.Context, in *SysUserUpdateReq, opts ...grpc.CallOption) (*CommonResp, error)
		SysUserFindOne(ctx context.Context, in *SysUserFindOneReq, opts ...grpc.CallOption) (*SysUserFindOneResp, error)
		SysUserList(ctx context.Context, in *SysUserListReq, opts ...grpc.CallOption) (*SysUserListResp, error)
	}

	defaultTpmt struct {
		cli zrpc.Client
	}
)

func NewTpmt(cli zrpc.Client) Tpmt {
	return &defaultTpmt{
		cli: cli,
	}
}

func (m *defaultTpmt) SysUserAdd(ctx context.Context, in *SysUserAddReq, opts ...grpc.CallOption) (*CommonResp, error) {
	client := tpmtclient.NewTpmtClient(m.cli.Conn())
	return client.SysUserAdd(ctx, in, opts...)
}

func (m *defaultTpmt) SysUserDelete(ctx context.Context, in *SysUserDeleteReq, opts ...grpc.CallOption) (*CommonResp, error) {
	client := tpmtclient.NewTpmtClient(m.cli.Conn())
	return client.SysUserDelete(ctx, in, opts...)
}

func (m *defaultTpmt) SysUserUpdate(ctx context.Context, in *SysUserUpdateReq, opts ...grpc.CallOption) (*CommonResp, error) {
	client := tpmtclient.NewTpmtClient(m.cli.Conn())
	return client.SysUserUpdate(ctx, in, opts...)
}

func (m *defaultTpmt) SysUserFindOne(ctx context.Context, in *SysUserFindOneReq, opts ...grpc.CallOption) (*SysUserFindOneResp, error) {
	client := tpmtclient.NewTpmtClient(m.cli.Conn())
	return client.SysUserFindOne(ctx, in, opts...)
}

func (m *defaultTpmt) SysUserList(ctx context.Context, in *SysUserListReq, opts ...grpc.CallOption) (*SysUserListResp, error) {
	client := tpmtclient.NewTpmtClient(m.cli.Conn())
	return client.SysUserList(ctx, in, opts...)
}
