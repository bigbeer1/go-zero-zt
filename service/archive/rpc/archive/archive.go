// Code generated by goctl. DO NOT EDIT.
// Source: archive.proto

package archive

import (
	"context"
	"tpmt-zt/service/archive/rpc/archiveclient"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AlarmLogFindListData          = archiveclient.AlarmLogFindListData
	AlarmLogFindListReq           = archiveclient.AlarmLogFindListReq
	AlarmLogFindListResp          = archiveclient.AlarmLogFindListResp
	AlarmUpStateReq               = archiveclient.AlarmUpStateReq
	AppLoggerAddReq               = archiveclient.AppLoggerAddReq
	AppLoggerFindListReq          = archiveclient.AppLoggerFindListReq
	AppLoggerFindListResp         = archiveclient.AppLoggerFindListResp
	CommonResp                    = archiveclient.CommonResp
	LoggerData                    = archiveclient.LoggerData
	ScheduledTasksLogData         = archiveclient.ScheduledTasksLogData
	ScheduledTasksLogFindListReq  = archiveclient.ScheduledTasksLogFindListReq
	ScheduledTasksLogFindListResp = archiveclient.ScheduledTasksLogFindListResp

	Archive interface {
		// 用户日志
		AppLoggerAdd(ctx context.Context, in *AppLoggerAddReq, opts ...grpc.CallOption) (*CommonResp, error)
		AppLoggerFindList(ctx context.Context, in *AppLoggerFindListReq, opts ...grpc.CallOption) (*AppLoggerFindListResp, error)
		// 自定义任务日志
		ScheduledTasksLogFindList(ctx context.Context, in *ScheduledTasksLogFindListReq, opts ...grpc.CallOption) (*ScheduledTasksLogFindListResp, error)
		// 重试任务日志
		ScheduledTasksFailureRecordLogFindList(ctx context.Context, in *ScheduledTasksLogFindListReq, opts ...grpc.CallOption) (*ScheduledTasksLogFindListResp, error)
		// 告警日志
		AlarmLogFindList(ctx context.Context, in *AlarmLogFindListReq, opts ...grpc.CallOption) (*AlarmLogFindListResp, error)
		// 告警更新状态
		AlarmUpState(ctx context.Context, in *AlarmUpStateReq, opts ...grpc.CallOption) (*CommonResp, error)
	}

	defaultArchive struct {
		cli zrpc.Client
	}
)

func NewArchive(cli zrpc.Client) Archive {
	return &defaultArchive{
		cli: cli,
	}
}

// 用户日志
func (m *defaultArchive) AppLoggerAdd(ctx context.Context, in *AppLoggerAddReq, opts ...grpc.CallOption) (*CommonResp, error) {
	client := archiveclient.NewArchiveClient(m.cli.Conn())
	return client.AppLoggerAdd(ctx, in, opts...)
}

func (m *defaultArchive) AppLoggerFindList(ctx context.Context, in *AppLoggerFindListReq, opts ...grpc.CallOption) (*AppLoggerFindListResp, error) {
	client := archiveclient.NewArchiveClient(m.cli.Conn())
	return client.AppLoggerFindList(ctx, in, opts...)
}

// 自定义任务日志
func (m *defaultArchive) ScheduledTasksLogFindList(ctx context.Context, in *ScheduledTasksLogFindListReq, opts ...grpc.CallOption) (*ScheduledTasksLogFindListResp, error) {
	client := archiveclient.NewArchiveClient(m.cli.Conn())
	return client.ScheduledTasksLogFindList(ctx, in, opts...)
}

// 重试任务日志
func (m *defaultArchive) ScheduledTasksFailureRecordLogFindList(ctx context.Context, in *ScheduledTasksLogFindListReq, opts ...grpc.CallOption) (*ScheduledTasksLogFindListResp, error) {
	client := archiveclient.NewArchiveClient(m.cli.Conn())
	return client.ScheduledTasksFailureRecordLogFindList(ctx, in, opts...)
}

// 告警日志
func (m *defaultArchive) AlarmLogFindList(ctx context.Context, in *AlarmLogFindListReq, opts ...grpc.CallOption) (*AlarmLogFindListResp, error) {
	client := archiveclient.NewArchiveClient(m.cli.Conn())
	return client.AlarmLogFindList(ctx, in, opts...)
}

// 告警更新状态
func (m *defaultArchive) AlarmUpState(ctx context.Context, in *AlarmUpStateReq, opts ...grpc.CallOption) (*CommonResp, error) {
	client := archiveclient.NewArchiveClient(m.cli.Conn())
	return client.AlarmUpState(ctx, in, opts...)
}
