// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: archive.proto

package archiveclient

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 通用空返回
type CommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonResp) Reset() {
	*x = CommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archive_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResp) ProtoMessage() {}

func (x *CommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResp.ProtoReflect.Descriptor instead.
func (*CommonResp) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{0}
}

type LoggerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid              string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                                                   // 操作人ID
	CreatedTime      int64  `protobuf:"varint,2,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`               // 创建人名称
	CreatedName      string `protobuf:"bytes,3,opt,name=created_name,json=createdName,proto3" json:"created_name,omitempty"`                // 创建人名称
	Ip               string `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`                                                     // 请求Ip
	InterfaceType    string `protobuf:"bytes,5,opt,name=interface_type,json=interfaceType,proto3" json:"interface_type,omitempty"`          // 请求方法
	InterfaceAddress string `protobuf:"bytes,6,opt,name=interface_address,json=interfaceAddress,proto3" json:"interface_address,omitempty"` // 请求地址
	RequestData      string `protobuf:"bytes,7,opt,name=request_data,json=requestData,proto3" json:"request_data,omitempty"`                // 请求参数
	IsRequest        int64  `protobuf:"varint,8,opt,name=is_request,json=isRequest,proto3" json:"is_request,omitempty"`                     // 请求结果
	ResponseData     string `protobuf:"bytes,9,opt,name=response_data,json=responseData,proto3" json:"response_data,omitempty"`             // 返回参数
	Timed            int64  `protobuf:"varint,10,opt,name=timed,proto3" json:"timed,omitempty"`                                             // 运算时间
}

func (x *LoggerData) Reset() {
	*x = LoggerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archive_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoggerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggerData) ProtoMessage() {}

func (x *LoggerData) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoggerData.ProtoReflect.Descriptor instead.
func (*LoggerData) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{1}
}

func (x *LoggerData) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *LoggerData) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *LoggerData) GetCreatedName() string {
	if x != nil {
		return x.CreatedName
	}
	return ""
}

func (x *LoggerData) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *LoggerData) GetInterfaceType() string {
	if x != nil {
		return x.InterfaceType
	}
	return ""
}

func (x *LoggerData) GetInterfaceAddress() string {
	if x != nil {
		return x.InterfaceAddress
	}
	return ""
}

func (x *LoggerData) GetRequestData() string {
	if x != nil {
		return x.RequestData
	}
	return ""
}

func (x *LoggerData) GetIsRequest() int64 {
	if x != nil {
		return x.IsRequest
	}
	return 0
}

func (x *LoggerData) GetResponseData() string {
	if x != nil {
		return x.ResponseData
	}
	return ""
}

func (x *LoggerData) GetTimed() int64 {
	if x != nil {
		return x.Timed
	}
	return 0
}

type AppLoggerAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid              string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                                                   // 操作人ID
	CreatedName      string `protobuf:"bytes,2,opt,name=created_name,json=createdName,proto3" json:"created_name,omitempty"`                // 创建人名称
	Ip               string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`                                                     // 请求Ip
	InterfaceType    string `protobuf:"bytes,4,opt,name=interface_type,json=interfaceType,proto3" json:"interface_type,omitempty"`          // 请求方法
	InterfaceAddress string `protobuf:"bytes,5,opt,name=interface_address,json=interfaceAddress,proto3" json:"interface_address,omitempty"` // 请求地址
	RequestData      string `protobuf:"bytes,6,opt,name=request_data,json=requestData,proto3" json:"request_data,omitempty"`                // 请求参数
	IsRequest        int64  `protobuf:"varint,7,opt,name=is_request,json=isRequest,proto3" json:"is_request,omitempty"`                     // 请求结果
	ResponseData     string `protobuf:"bytes,8,opt,name=response_data,json=responseData,proto3" json:"response_data,omitempty"`             // 返回参数
	Timed            int64  `protobuf:"varint,10,opt,name=timed,proto3" json:"timed,omitempty"`                                             // 运算时间
}

func (x *AppLoggerAddReq) Reset() {
	*x = AppLoggerAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archive_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppLoggerAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppLoggerAddReq) ProtoMessage() {}

func (x *AppLoggerAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppLoggerAddReq.ProtoReflect.Descriptor instead.
func (*AppLoggerAddReq) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{2}
}

func (x *AppLoggerAddReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AppLoggerAddReq) GetCreatedName() string {
	if x != nil {
		return x.CreatedName
	}
	return ""
}

func (x *AppLoggerAddReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *AppLoggerAddReq) GetInterfaceType() string {
	if x != nil {
		return x.InterfaceType
	}
	return ""
}

func (x *AppLoggerAddReq) GetInterfaceAddress() string {
	if x != nil {
		return x.InterfaceAddress
	}
	return ""
}

func (x *AppLoggerAddReq) GetRequestData() string {
	if x != nil {
		return x.RequestData
	}
	return ""
}

func (x *AppLoggerAddReq) GetIsRequest() int64 {
	if x != nil {
		return x.IsRequest
	}
	return 0
}

func (x *AppLoggerAddReq) GetResponseData() string {
	if x != nil {
		return x.ResponseData
	}
	return ""
}

func (x *AppLoggerAddReq) GetTimed() int64 {
	if x != nil {
		return x.Timed
	}
	return 0
}

type AppLoggerFindListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current          int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`                                          //页码
	PageSize         int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                        //数据量
	StartTime        int64  `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                     // 开始时间
	EndTime          int64  `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                           // 结束时间
	Uid              string `protobuf:"bytes,5,opt,name=uid,proto3" json:"uid,omitempty"`                                                   // 操作人ID
	Ip               string `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`                                                     // 请求Ip
	InterfaceType    string `protobuf:"bytes,7,opt,name=interface_type,json=interfaceType,proto3" json:"interface_type,omitempty"`          // 请求方法
	InterfaceAddress string `protobuf:"bytes,8,opt,name=interface_address,json=interfaceAddress,proto3" json:"interface_address,omitempty"` // 请求方法
	IsRequest        int64  `protobuf:"varint,9,opt,name=is_request,json=isRequest,proto3" json:"is_request,omitempty"`                     // 请求结果
}

func (x *AppLoggerFindListReq) Reset() {
	*x = AppLoggerFindListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archive_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppLoggerFindListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppLoggerFindListReq) ProtoMessage() {}

func (x *AppLoggerFindListReq) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppLoggerFindListReq.ProtoReflect.Descriptor instead.
func (*AppLoggerFindListReq) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{3}
}

func (x *AppLoggerFindListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *AppLoggerFindListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *AppLoggerFindListReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AppLoggerFindListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *AppLoggerFindListReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AppLoggerFindListReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *AppLoggerFindListReq) GetInterfaceType() string {
	if x != nil {
		return x.InterfaceType
	}
	return ""
}

func (x *AppLoggerFindListReq) GetInterfaceAddress() string {
	if x != nil {
		return x.InterfaceAddress
	}
	return ""
}

func (x *AppLoggerFindListReq) GetIsRequest() int64 {
	if x != nil {
		return x.IsRequest
	}
	return 0
}

type AppLoggerFindListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` //总数据量
	List  []*LoggerData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    //数据
}

func (x *AppLoggerFindListResp) Reset() {
	*x = AppLoggerFindListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archive_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppLoggerFindListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppLoggerFindListResp) ProtoMessage() {}

func (x *AppLoggerFindListResp) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppLoggerFindListResp.ProtoReflect.Descriptor instead.
func (*AppLoggerFindListResp) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{4}
}

func (x *AppLoggerFindListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AppLoggerFindListResp) GetList() []*LoggerData {
	if x != nil {
		return x.List
	}
	return nil
}

type ScheduledTasksLogFindListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current          int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`                                            //页码
	PageSize         int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                          //数据量
	StartTime        int64  `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                       // 开始时间
	EndTime          int64  `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                             // 结束时间
	ScheduledTasksId string `protobuf:"bytes,5,opt,name=scheduled_tasks_id,json=scheduledTasksId,proto3" json:"scheduled_tasks_id,omitempty"` // 自定义任务ID
	IsRequest        int64  `protobuf:"varint,6,opt,name=is_request,json=isRequest,proto3" json:"is_request,omitempty"`                       // 状态  1:成功  其他失败
}

func (x *ScheduledTasksLogFindListReq) Reset() {
	*x = ScheduledTasksLogFindListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archive_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduledTasksLogFindListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledTasksLogFindListReq) ProtoMessage() {}

func (x *ScheduledTasksLogFindListReq) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledTasksLogFindListReq.ProtoReflect.Descriptor instead.
func (*ScheduledTasksLogFindListReq) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{5}
}

func (x *ScheduledTasksLogFindListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ScheduledTasksLogFindListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ScheduledTasksLogFindListReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ScheduledTasksLogFindListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ScheduledTasksLogFindListReq) GetScheduledTasksId() string {
	if x != nil {
		return x.ScheduledTasksId
	}
	return ""
}

func (x *ScheduledTasksLogFindListReq) GetIsRequest() int64 {
	if x != nil {
		return x.IsRequest
	}
	return 0
}

type ScheduledTasksLogFindListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` //总数据量
	List  []*ScheduledTasksLogData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    //数据
}

func (x *ScheduledTasksLogFindListResp) Reset() {
	*x = ScheduledTasksLogFindListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archive_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduledTasksLogFindListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledTasksLogFindListResp) ProtoMessage() {}

func (x *ScheduledTasksLogFindListResp) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledTasksLogFindListResp.ProtoReflect.Descriptor instead.
func (*ScheduledTasksLogFindListResp) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{6}
}

func (x *ScheduledTasksLogFindListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ScheduledTasksLogFindListResp) GetList() []*ScheduledTasksLogData {
	if x != nil {
		return x.List
	}
	return nil
}

type ScheduledTasksLogData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts               int64  `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`                                                      // 创建时间
	ScheduledTasksId string `protobuf:"bytes,2,opt,name=scheduled_tasks_id,json=scheduledTasksId,proto3" json:"scheduled_tasks_id,omitempty"` // 自定义任务ID
	IsRequest        int64  `protobuf:"varint,4,opt,name=is_request,json=isRequest,proto3" json:"is_request,omitempty"`                       // 状态  1:成功  其他失败
	RequestData      string `protobuf:"bytes,5,opt,name=request_data,json=requestData,proto3" json:"request_data,omitempty"`                  // 数据  发送内容
	ResponseData     string `protobuf:"bytes,6,opt,name=response_data,json=responseData,proto3" json:"response_data,omitempty"`               //  数据  返回内容
	TenantId         string `protobuf:"bytes,7,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`                           // 租户ID
}

func (x *ScheduledTasksLogData) Reset() {
	*x = ScheduledTasksLogData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archive_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduledTasksLogData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledTasksLogData) ProtoMessage() {}

func (x *ScheduledTasksLogData) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledTasksLogData.ProtoReflect.Descriptor instead.
func (*ScheduledTasksLogData) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{7}
}

func (x *ScheduledTasksLogData) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *ScheduledTasksLogData) GetScheduledTasksId() string {
	if x != nil {
		return x.ScheduledTasksId
	}
	return ""
}

func (x *ScheduledTasksLogData) GetIsRequest() int64 {
	if x != nil {
		return x.IsRequest
	}
	return 0
}

func (x *ScheduledTasksLogData) GetRequestData() string {
	if x != nil {
		return x.RequestData
	}
	return ""
}

func (x *ScheduledTasksLogData) GetResponseData() string {
	if x != nil {
		return x.ResponseData
	}
	return ""
}

func (x *ScheduledTasksLogData) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type AlarmLogFindListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current       int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`                                  //页码
	PageSize      int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                //数据量
	StartTime     int64  `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`             // 开始时间
	EndTime       int64  `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                   // 结束时间
	AlarmCategory int64  `protobuf:"varint,5,opt,name=alarm_category,json=alarmCategory,proto3" json:"alarm_category,omitempty"` //告警类别
	Id            string `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`                                             // 告警ID
	Mid           string `protobuf:"bytes,7,opt,name=mid,proto3" json:"mid,omitempty"`                                           // mid 预警设备ID
	AlarmType     int64  `protobuf:"varint,9,opt,name=alarm_type,json=alarmType,proto3" json:"alarm_type,omitempty"`             //  类型：1 越上限/2 越下限/ 3 变位 / 4 网关下线
	AlarmGrade    int64  `protobuf:"varint,10,opt,name=alarm_grade,json=alarmGrade,proto3" json:"alarm_grade,omitempty"`         // 等级：1 预警/2 告警 /3 提醒
	AssetCode     string `protobuf:"bytes,11,opt,name=asset_code,json=assetCode,proto3" json:"asset_code,omitempty"`             // 柜号
	AlarmState    int64  `protobuf:"varint,12,opt,name=alarm_state,json=alarmState,proto3" json:"alarm_state,omitempty"`         // 状态 0 未读  1已读  2已确认
}

func (x *AlarmLogFindListReq) Reset() {
	*x = AlarmLogFindListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archive_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmLogFindListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmLogFindListReq) ProtoMessage() {}

func (x *AlarmLogFindListReq) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmLogFindListReq.ProtoReflect.Descriptor instead.
func (*AlarmLogFindListReq) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{8}
}

func (x *AlarmLogFindListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *AlarmLogFindListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *AlarmLogFindListReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AlarmLogFindListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *AlarmLogFindListReq) GetAlarmCategory() int64 {
	if x != nil {
		return x.AlarmCategory
	}
	return 0
}

func (x *AlarmLogFindListReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AlarmLogFindListReq) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *AlarmLogFindListReq) GetAlarmType() int64 {
	if x != nil {
		return x.AlarmType
	}
	return 0
}

func (x *AlarmLogFindListReq) GetAlarmGrade() int64 {
	if x != nil {
		return x.AlarmGrade
	}
	return 0
}

func (x *AlarmLogFindListReq) GetAssetCode() string {
	if x != nil {
		return x.AssetCode
	}
	return ""
}

func (x *AlarmLogFindListReq) GetAlarmState() int64 {
	if x != nil {
		return x.AlarmState
	}
	return 0
}

type AlarmLogFindListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts           int64  `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`                                        // 开始时间
	Id           string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`                                         // 告警ID
	Mid          string `protobuf:"bytes,3,opt,name=mid,proto3" json:"mid,omitempty"`                                       // mid 预警设备ID
	Name         string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                     // 设备名称
	AlarmType    int64  `protobuf:"varint,5,opt,name=alarm_type,json=alarmType,proto3" json:"alarm_type,omitempty"`         //  类型：1 越上限/2 越下限/ 3 变位 / 4 网关下线
	AlarmGrade   int64  `protobuf:"varint,6,opt,name=alarm_grade,json=alarmGrade,proto3" json:"alarm_grade,omitempty"`      // 等级：1 预警/2 告警 /3 提醒
	AlarmContent string `protobuf:"bytes,7,opt,name=alarm_content,json=alarmContent,proto3" json:"alarm_content,omitempty"` // 数据  返回内容
	AssetCode    string `protobuf:"bytes,8,opt,name=asset_code,json=assetCode,proto3" json:"asset_code,omitempty"`          // 设备名称
	AlarmState   int64  `protobuf:"varint,9,opt,name=alarm_state,json=alarmState,proto3" json:"alarm_state,omitempty"`      // 状态 0 未读  1已读  2已确认
}

func (x *AlarmLogFindListData) Reset() {
	*x = AlarmLogFindListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archive_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmLogFindListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmLogFindListData) ProtoMessage() {}

func (x *AlarmLogFindListData) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmLogFindListData.ProtoReflect.Descriptor instead.
func (*AlarmLogFindListData) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{9}
}

func (x *AlarmLogFindListData) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *AlarmLogFindListData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AlarmLogFindListData) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *AlarmLogFindListData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlarmLogFindListData) GetAlarmType() int64 {
	if x != nil {
		return x.AlarmType
	}
	return 0
}

func (x *AlarmLogFindListData) GetAlarmGrade() int64 {
	if x != nil {
		return x.AlarmGrade
	}
	return 0
}

func (x *AlarmLogFindListData) GetAlarmContent() string {
	if x != nil {
		return x.AlarmContent
	}
	return ""
}

func (x *AlarmLogFindListData) GetAssetCode() string {
	if x != nil {
		return x.AssetCode
	}
	return ""
}

func (x *AlarmLogFindListData) GetAlarmState() int64 {
	if x != nil {
		return x.AlarmState
	}
	return 0
}

type AlarmLogFindListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                   `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` //总数据量
	List  []*AlarmLogFindListData `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    //数据
}

func (x *AlarmLogFindListResp) Reset() {
	*x = AlarmLogFindListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archive_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmLogFindListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmLogFindListResp) ProtoMessage() {}

func (x *AlarmLogFindListResp) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmLogFindListResp.ProtoReflect.Descriptor instead.
func (*AlarmLogFindListResp) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{10}
}

func (x *AlarmLogFindListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AlarmLogFindListResp) GetList() []*AlarmLogFindListData {
	if x != nil {
		return x.List
	}
	return nil
}

type AlarmUpStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"` // 告警ID
}

func (x *AlarmUpStateReq) Reset() {
	*x = AlarmUpStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archive_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmUpStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmUpStateReq) ProtoMessage() {}

func (x *AlarmUpStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmUpStateReq.ProtoReflect.Descriptor instead.
func (*AlarmUpStateReq) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{11}
}

func (x *AlarmUpStateReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_archive_proto protoreflect.FileDescriptor

var file_archive_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0d, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x0c,
	0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xc5, 0x02, 0x0a,
	0x0a, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x69, 0x6d, 0x65, 0x64, 0x22, 0xa7, 0x02, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x67,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x25, 0x0a,
	0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x22, 0x9c,
	0x02, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5c, 0x0a,
	0x15, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x67, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xdc, 0x01, 0x0a, 0x1c,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f,
	0x67, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a,
	0x12, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6f, 0x0a, 0x1d, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x46,
	0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xd9, 0x01, 0x0a, 0x15,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xcf, 0x02, 0x0a, 0x13, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x81, 0x02, 0x0a, 0x14, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x61, 0x72, 0x6d,
	0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x65, 0x0a,
	0x14, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c,
	0x6f, 0x67, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x21, 0x0a, 0x0f, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x55, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0xda, 0x04, 0x0a, 0x07, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x12, 0x1e, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5e,
	0x0a, 0x11, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x46, 0x69, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x67,
	0x65, 0x72, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x76,
	0x0a, 0x19, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x83, 0x01, 0x0a, 0x26, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2b, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2c,
	0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x4c, 0x6f, 0x67,
	0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5b, 0x0a, 0x10,
	0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x22, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x0c, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x55, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x55,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_archive_proto_rawDescOnce sync.Once
	file_archive_proto_rawDescData = file_archive_proto_rawDesc
)

func file_archive_proto_rawDescGZIP() []byte {
	file_archive_proto_rawDescOnce.Do(func() {
		file_archive_proto_rawDescData = protoimpl.X.CompressGZIP(file_archive_proto_rawDescData)
	})
	return file_archive_proto_rawDescData
}

var file_archive_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_archive_proto_goTypes = []interface{}{
	(*CommonResp)(nil),                    // 0: archiveclient.CommonResp
	(*LoggerData)(nil),                    // 1: archiveclient.LoggerData
	(*AppLoggerAddReq)(nil),               // 2: archiveclient.AppLoggerAddReq
	(*AppLoggerFindListReq)(nil),          // 3: archiveclient.AppLoggerFindListReq
	(*AppLoggerFindListResp)(nil),         // 4: archiveclient.AppLoggerFindListResp
	(*ScheduledTasksLogFindListReq)(nil),  // 5: archiveclient.ScheduledTasksLogFindListReq
	(*ScheduledTasksLogFindListResp)(nil), // 6: archiveclient.ScheduledTasksLogFindListResp
	(*ScheduledTasksLogData)(nil),         // 7: archiveclient.ScheduledTasksLogData
	(*AlarmLogFindListReq)(nil),           // 8: archiveclient.AlarmLogFindListReq
	(*AlarmLogFindListData)(nil),          // 9: archiveclient.AlarmLogFindListData
	(*AlarmLogFindListResp)(nil),          // 10: archiveclient.AlarmLogFindListResp
	(*AlarmUpStateReq)(nil),               // 11: archiveclient.AlarmUpStateReq
}
var file_archive_proto_depIdxs = []int32{
	1,  // 0: archiveclient.AppLoggerFindListResp.list:type_name -> archiveclient.LoggerData
	7,  // 1: archiveclient.ScheduledTasksLogFindListResp.list:type_name -> archiveclient.ScheduledTasksLogData
	9,  // 2: archiveclient.AlarmLogFindListResp.list:type_name -> archiveclient.AlarmLogFindListData
	2,  // 3: archiveclient.Archive.AppLoggerAdd:input_type -> archiveclient.AppLoggerAddReq
	3,  // 4: archiveclient.Archive.AppLoggerFindList:input_type -> archiveclient.AppLoggerFindListReq
	5,  // 5: archiveclient.Archive.ScheduledTasksLogFindList:input_type -> archiveclient.ScheduledTasksLogFindListReq
	5,  // 6: archiveclient.Archive.ScheduledTasksFailureRecordLogFindList:input_type -> archiveclient.ScheduledTasksLogFindListReq
	8,  // 7: archiveclient.Archive.AlarmLogFindList:input_type -> archiveclient.AlarmLogFindListReq
	11, // 8: archiveclient.Archive.AlarmUpState:input_type -> archiveclient.AlarmUpStateReq
	0,  // 9: archiveclient.Archive.AppLoggerAdd:output_type -> archiveclient.CommonResp
	4,  // 10: archiveclient.Archive.AppLoggerFindList:output_type -> archiveclient.AppLoggerFindListResp
	6,  // 11: archiveclient.Archive.ScheduledTasksLogFindList:output_type -> archiveclient.ScheduledTasksLogFindListResp
	6,  // 12: archiveclient.Archive.ScheduledTasksFailureRecordLogFindList:output_type -> archiveclient.ScheduledTasksLogFindListResp
	10, // 13: archiveclient.Archive.AlarmLogFindList:output_type -> archiveclient.AlarmLogFindListResp
	0,  // 14: archiveclient.Archive.AlarmUpState:output_type -> archiveclient.CommonResp
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_archive_proto_init() }
func file_archive_proto_init() {
	if File_archive_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_archive_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archive_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoggerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archive_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppLoggerAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archive_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppLoggerFindListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archive_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppLoggerFindListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archive_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduledTasksLogFindListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archive_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduledTasksLogFindListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archive_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduledTasksLogData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archive_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmLogFindListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archive_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmLogFindListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archive_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmLogFindListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archive_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmUpStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_archive_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_archive_proto_goTypes,
		DependencyIndexes: file_archive_proto_depIdxs,
		MessageInfos:      file_archive_proto_msgTypes,
	}.Build()
	File_archive_proto = out.File
	file_archive_proto_rawDesc = nil
	file_archive_proto_goTypes = nil
	file_archive_proto_depIdxs = nil
}
