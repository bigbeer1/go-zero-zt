syntax = "proto3";

package archiveclient;
option go_package = "./archiveclient";

// 通用空返回
message CommonResp{

}


message LoggerData {
  string uid = 1; // 操作人ID
  int64 created_time = 2; // 创建人名称
  string created_name = 3; // 创建人名称
  string ip = 4; // 请求Ip
  string interface_type = 5; // 请求方法
  string interface_address = 6; // 请求地址
  string request_data = 7; // 请求参数
  int64 is_request = 8; // 请求结果
  string response_data = 9; // 返回参数
  int64 timed = 10; // 运算时间
}

message AppLoggerAddReq {
  string uid = 1; // 操作人ID
  string created_name = 2; // 创建人名称
  string ip = 3; // 请求Ip
  string interface_type = 4; // 请求方法
  string interface_address = 5; // 请求地址
  string request_data = 6; // 请求参数
  int64 is_request = 7; // 请求结果
  string response_data = 8; // 返回参数
  int64 timed = 10; // 运算时间
}

message AppLoggerFindListReq{
  int64 current = 1; //页码
  int64 page_size = 2; //数据量
  int64 start_time = 3; // 开始时间
  int64 end_time = 4; // 结束时间
  string uid = 5; // 操作人ID
  string ip = 6; // 请求Ip
  string interface_type = 7; // 请求方法
  string interface_address = 8; // 请求方法
  int64 is_request = 9; // 请求结果
}

message AppLoggerFindListResp{
  int64 total = 1; //总数据量
  repeated  LoggerData list = 2; //数据
}


message ScheduledTasksLogFindListReq{
  int64 current = 1; //页码
  int64 page_size = 2; //数据量
  int64 start_time = 3; // 开始时间
  int64 end_time = 4; // 结束时间
  string scheduled_tasks_id = 5; // 自定义任务ID
  int64 is_request = 6; // 状态  1:成功  其他失败
}

message ScheduledTasksLogFindListResp{
  int64 total = 1; //总数据量
  repeated  ScheduledTasksLogData list = 2; //数据
}

message ScheduledTasksLogData{
  int64 ts = 1; // 创建时间
  string scheduled_tasks_id = 2; // 自定义任务ID
  int64 is_request = 4; // 状态  1:成功  其他失败
  string request_data = 5; // 数据  发送内容
  string response_data = 6; //  数据  返回内容
  string tenant_id = 7; // 租户ID
}

message AlarmLogFindListReq{
  int64 current = 1; //页码
  int64 page_size = 2; //数据量
  int64 start_time = 3; // 开始时间
  int64 end_time = 4; // 结束时间
  int64 alarm_category = 5; //告警类别
  string id = 6; // 告警ID
  string mid = 7; // mid 预警设备ID
  int64 alarm_type = 9; //  类型：1 越上限/2 越下限/ 3 变位 / 4 网关下线
  int64 alarm_grade = 10; // 等级：1 预警/2 告警 /3 提醒
  string asset_code = 11; // 柜号
  int64 alarm_state = 12; // 状态 0 未读  1已读  2已确认
}

message AlarmLogFindListData{
  int64 ts = 1; // 开始时间
  string id = 2; // 告警ID
  string mid = 3; // mid 预警设备ID
  string name = 4; // 设备名称
  int64 alarm_type = 5; //  类型：1 越上限/2 越下限/ 3 变位 / 4 网关下线
  int64 alarm_grade = 6; // 等级：1 预警/2 告警 /3 提醒
  string alarm_content = 7; // 数据  返回内容
  string asset_code = 8; // 设备名称
  int64 alarm_state = 9; // 状态 0 未读  1已读  2已确认
}


message AlarmLogFindListResp{
  int64 total = 1; //总数据量
  repeated  AlarmLogFindListData list = 2; //数据
}


message AlarmUpStateReq{
  string id = 6; // 告警ID
}


service Archive {
  // 用户日志
  rpc AppLoggerAdd(AppLoggerAddReq) returns (CommonResp);

  rpc AppLoggerFindList(AppLoggerFindListReq) returns (AppLoggerFindListResp);


  // 自定义任务日志
  rpc ScheduledTasksLogFindList(ScheduledTasksLogFindListReq) returns (ScheduledTasksLogFindListResp);

  // 重试任务日志
  rpc ScheduledTasksFailureRecordLogFindList(ScheduledTasksLogFindListReq) returns (ScheduledTasksLogFindListResp);

  // 告警日志
  rpc AlarmLogFindList(AlarmLogFindListReq) returns (AlarmLogFindListResp);

  // 告警更新状态
  rpc AlarmUpState(AlarmUpStateReq) returns (CommonResp);
}